#python中常用的运算符
#算数运算符  赋值运算符  比较运算符  布尔运算符  位运算符


#算数运算符（数学运算符）
#标准算数运算符： +， -， *， /， //(整除)
#取余运算符： %
#幂运算符： **
print('------------------------------+, -, *, /, //------------------------------')
print(1+1)#加法运算
print(1-1)#减法运算
print(2*4)#乘法运算
print(1/2)#除法运算
print(11//2)#整除运算
print('------------------------------%,**------------------------------')
print(11%2)#取余运算   # python当中的取余运算与除数有关，当除数为负时结果也为负
print(2**2)#表示2的2次方
print(2**3)#表示2的3次方
#//注意事项：一正一负向下取整;异号时取整运算的值必定为负数，若有小数，直接进位
print(9//4)#2
print(-9//-4)#2
print(9//-4)#-3
print(-9//4)#-3
#%注意事项：一正一负要公式：余数=被除数-除数*商   公式中的商为取整的商
print(9%-4)#-3 = 9-(-4)*(-3)
print(-9%4)#3 = -9-4*(-3)



#赋值运算符
#执行顺序：右--->左
#支持链式赋值：a=b=c=20
#支持参数赋值：+=  -=  *=  /=  //=  %=
#支持系列解包赋值： a,b,c=20,30,40
a=3+4
print(a)
print('------------------------------a=b=c=20------------------------------')
n1=n2=n3=20#链式赋值
print(n1,id(n1))
print(n2,id(n2))
print(n3,id(n3))#开辟一个内存空间，id存为2613560044432，type存为int，value存为20
#a,b,c均指向该内存空间
print('------------------------------+=  -=  *=  /=  //=  %=------------------------------')
#支持参数赋值
a=20
a+=30  #50相当于a=a+30
a-=10  #相当于a=a-10
print(a)
a*=2   #相当与a=a*2
print(a)
print(type(a)) #int
a/=3
print(a)
print(type(a)) #float
a//=2
print(a) #float
a%=3
print(a)

#系列解包赋值
print('------------------------------a,b,c=20,30,40------------------------------')
a,b,c=20,30,40#开辟三个内存空间，分别存储20，30，40（value）,且有各自的id与type，a,b,c三个变量对应指向各自空间
print(a,b,c)#值的个数必须相同，不然会报错
#a,b=20,30,40
#a,b,c=20,30
print('------------------------------exchange------------------------------')
#交换两个变量的值，无需中间变量
a,b=10,20
print('before exchange',a,b)
a,b=b,a
print('after exchange',a,b)



#比较运算符,比较运算符的结果为bool
#  <  >  >=  <=  !=
#  ==
#  is  is not
print('------------------------------<  >  >=  <=  !=------------------------------')
a,b=10,20
print('is a>b?',a>b) #False
print('is a<b?',a<b) #True
print('is a<=b?',a<=b) #True
print('is a>=b?',a>=b) #False
print('is a==b?',a==b) #False
print('is a!=b?',a!=b) #False
#一个 = 称为赋值运算符， == 称为比较运算符
#一个变量由三部分组成，标识，类型，值
# == 比较的是值还是标识呢？  比较的是值（value）
#比较标识的语句是is
print('------------------------------== is  is not------------------------------')
a = 10
b = 10
print(id(a),id(b))
print(a==b)  #True 说明，a与b的value相同
print(a is b)  #True  说明，a与b的id(标识)相同
print(a is not b)

list1=[11,22,33,44]
list2=[11,22,33,44]#两个列表不能共用一个地址，不然一个变了另一个也会跟着变
print(id(list1),id(list2))
print(list1==list2)  #value  True
print(list1 is list2)  #id   False
print(list1 is not list2)



#布尔运算符
#and   or   not   in   not in
print('------------------------------and  or------------------------------')
a,b=1,2
print(a==1 and b==2) #True  and 一假就假，全真才真
print(a==1 and b<2)  #False
print(a!=1 and b==2) #False
print(a!=1 and b!=2) #False

print(a==1 or b==2) #True  or 一真就真，全假才假
print(a==1 or b<2)  #True
print(a!=1 or b==2) #True
print(a!=1 or b!=2) #False
print('------------------------------not------------------------------')
f=True
f2=False
print(not f)
print(not f2)
print('------------------------------in  not in------------------------------')
s='helloworld'
print('w'in s)
print('k'in s)
print('w'not in s)
print('k'not in s)



#位运算符:将数据转成二进制进行计算
#按位与&：对应数位都是1，结果数位才是1，否则为0
#按位或|：对应数位都是0，结果数位才是0，否则为1
#将数据转化为二进制后，对应每一位去比
#左移位运算符<<：高位溢出舍弃，低位补0
#右移位运算符>>：低位溢出舍弃，高位补0
print('------------------------------&  |------------------------------')
print(4&8)#按位与，比的时候，同为一时结果为一(一0就0，全一才一)
#"""
#4:      0 0 0 0 0 1 0 0
#8:      0 0 0 0 1 0 0 0
#结果:   0 0 0 0 0 0 0 0  --->0
#"""
print(4|8)#按位或，比的时候，同为零时结果才为0（一一就一，全0才0）
#"""
#4:      0 0 0 0 0 1 0 0
#8:      0 0 0 0 1 0 0 0
#结果:   0 0 0 0 1 1 0 0  --->12
#"""
#比完后出现的二进制数换算成十进制，作为结果
print('------------------------------<<  >>------------------------------')
print(4<<1)#四的二进制数向左移动一位---->相当于乘以二
print(4<<2)#四的二进制数向左移动两位---->相当于乘以四
#"""
#4:                 0 0 0 0 0 1 0 0
#左移一位：       0 0 0 0 0 1 0 0        高位溢出舍弃，低位补0
#结果：             0 0 0 0 1 0 0 0
#"""
print(4>>1)#四的二进制数向右移动一位---->相当于除以二
print(4>>1)#四的二进制数向右移动两位---->相当于除以四
#"""
#4:                 0 0 0 0 0 1 0 0
#右移一位：           0 0 0 0 0 1 0 0    低位溢出舍弃，高位补0
#结果：             0 0 0 0 0 0 1 0
#"""

#运算符的优先级：没有括号按下方，右括号先算括号里的
#计算顺序：            算数运算  ---->                 位运算---->             比较运算        ---->布尔运算---->  赋值运算
#精确排序：(**)---->(*，/，//，%)---->(+,-)---->(<<  >>)---->(&)---->(|---->(>,<,>=,<=,==,!=)---->(and)---->(or)---->(=)